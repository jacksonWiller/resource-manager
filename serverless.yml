service: resource-manager
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  lambdaHashingVersion: '20201221'
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  environment:
    DYNAMODB_TABLE: ${self:service}-${self:provider.stage}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: 
            - Fn::GetAtt: [ ProductsTable, Arn ]
        - Effect: Allow
          Action:
            - s3:CreateBucket
            - s3:DeleteBucket 
            - s3:ListBuckets
            - s3:HeadBucket
            - s3:PutBucketTagging
            - s3:GetBucketTagging
          Resource: "*"

functions:

  test:
    handler: src/functions/test/handler.test
    events:
      - httpApi:
          path: /test
          method: get

  createBucket:
    handler: src/functions/bucket/handler.createBucket
    events:
      - http:
          path: /buckets
          method: post
  
  getAllBuckets:
    handler: src/functions/bucket/handler.getAllBuckets
    events:
      - http:
          path: /buckets
          method: get
  
  deleteBucket:
    handler: src/functions/bucket/handler.deleteBucket
    events:
      - http:
          path: /buckets
          method: delete

  listProducts:
    handler: src/functions/product/handler.list
    events:
      - http:
          path: products
          method: get
        
  createProduct:
    handler: src/functions/product/handler.create
    events:
      - http:
          path: products
          method: post

  # getProduct:
  #   handler: src/functions/product/handler.get 
  #   events:
  #     - http:
  #         path: products/{id}
  #         method: get



  # updateProduct:
  #   handler: src/functions/product/handler.update
  #   events:
  #     - http:
  #         path: products/{id}
  #         method: put

  # deleteProduct:
  #   handler: src/functions/product/handler.remove
  #   events:
  #     - http:
  #         path: products/{id}
  #         method: delete

resources:
  Resources:
    ProductsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Product2
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST


plugins:
  - serverless-plugin-typescript
  - serverless-offline
